{"version":3,"sources":["utils/_DATA.js","actions/users.js","actions/questions.js","actions/stats.js","utils/helpers.js","actions/shared.js","actions/authedUser.js","components/UserListElement.js","components/UserList.js","components/Welcome.js","components/UserBarInfo.js","components/PoolListElement.js","components/PoolList.js","components/QuestionDetails.js","components/NotFound.js","components/Add.js","components/Leaderboard.js","App.js","serviceWorker.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","reducers/stats.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","formatQuestion","_ref","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","RECEIVE_USERS","ADD_USER_QUESTIONS","receiveUsers","type","RECEIVE_QUESTIONS","ADD_QUESTION","receiveQuestions","RECEIVE_STATS","receiveStats","stats","checkIfAlreadyVoted","question","authedUser","includes","getStats","a","b","result","_arr2","Object","keys","_i2","length","key","partialResult","questionId","percentage","round","votersNumber","votersPercent","persistLogin","user","localStorage","loggedUser","removeItem","handleNotLoggedUserRedirection","props","history","push","getInitialUsers","dispatch","Promise","res","rej","setTimeout","objectSpread","then","getInitialQuestions","location","pathname","indexOf","hasOwnProperty","slice","saveAnswer","data","_ref2","qid","answer","defineProperty","concat","_saveQuestionAnswer","SET_AUTHED_USER","setAuthedUser","UserListElement","handleUserSelection","_this","userId","goBack","_this$props","this","currentUserData","react_default","createElement","onClick","src","alt","Component","withRouter","connect","UserList","className","userIds","map","components_UserListElement","sort","toLowerCase","localeCompare","Welcome","react","Link","to","UserBarInfo","handleLogout","userName","avatarUrl","PoolListElement","handleVoting","state","isVotingDisabled","setState","isVoted","isUserInQuestionsPath","_this2","_this3","_this$props$questions","authorData","votingSection","PoolList","displayAnswered","handleToggle","answeredQuestions","unansweredQuestions","currentQuestions","components_PoolListElement","filteredQuestions","unanswered","answered","_arr","_i","filterQuestionsByUser","QuestionDetails","handleBack","match","params","currentQuestion","NotFound","handleBackToHome","Add","isSubmitBtnDisabled","errorMessage","handleSubmit","e","preventDefault","form","document","querySelector","serialisedForm","serialize","hash","formattedQuestion","addUserQuestions","newQuestion","htmlFor","placeholder","Leaderboard","rankedUsers","usersId","total","usersKeys","App","userBarInfo","components_UserBarInfo","Switch","Route","exact","path","render","components_Welcome","components_PoolList","component","Boolean","window","hostname","combineReducers","arguments","undefined","action","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","es","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.579f7780.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://api.adorable.io/avatars/40/sarahedo.png',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://api.adorable.io/avatars/40/tylermcginnis.png',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://api.adorable.io/avatars/40/johndoe.png',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n};\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillian'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n};\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      };\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      };\n\n      res({users, questions})\n    }, 500)\n  })\n}","export const RECEIVE_USERS = 'RECEIVE_USERS';\nexport const ADD_USER_QUESTIONS = 'ADD_USER_QUESTIONS';\n\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    users\n  }\n}\n\nexport function addUserQuestions(question) {\n  return {\n    type: ADD_USER_QUESTIONS,\n    question\n  }\n}","export const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_QUESTION = 'ADD_QUESTION';\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  }\n}\n\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  }\n}","export const RECEIVE_STATS = 'RECEIVE_STATS';\n\nexport function receiveStats(stats) {\n  return {\n    type: RECEIVE_STATS,\n    stats\n  }\n}","/**\n * Filters the questions for determine which have been answered or not\n *\n * @param questions\n * @param authedUser\n * @returns {{unanswered, answered}}\n */\nexport function filterQuestionsByUser(questions, authedUser) {\n  const unanswered = [];\n  const answered = [];\n\n  for (const key of Object.keys(questions)) {\n\n    //Check if the authed user voted for any of the available options\n    if (\n      questions[key].optionOne.votes.includes(authedUser) ||\n      questions[key].optionTwo.votes.includes(authedUser)\n    ) {\n      answered.push(questions[key]);\n    } else {\n      unanswered.push(questions[key]);\n    }\n  }\n\n  answered.sort((a, b) => b.timestamp - a.timestamp);\n  unanswered.sort((a, b) => b.timestamp - a.timestamp);\n\n  return {unanswered, answered}\n}\n\n/**\n * Checks if the question has already been voted by the current logged in user\n *\n * @param question\n * @param authedUser\n * @returns {boolean}\n */\nexport function checkIfAlreadyVoted(question, authedUser) {\n  return question.votes.includes(authedUser);\n}\n\n/**\n * Given the available questions returns the stats for all of them a a new\n * array of object\n *\n * @param questions\n * @returns {Array}\n */\nexport function getStats(questions) {\n\n  /**\n   * Given 2 numbers, returns an objects containing the percentages between them\n   *\n   * @param a\n   * @param b\n   * @returns {{a: number, b: number}}\n   */\n  function getPercentile(a, b) {\n    if (a + b > 0) {\n      return {\n        a: Math.round(a / (a + b) * 100),\n        b: 100 - Math.round(a / (a + b) * 100),\n      }\n    } else {\n      return {\n        a: 0,\n        b: 0,\n      }\n    }\n  }\n\n  //The result array that will be eventually returned\n  let result = {};\n\n  //Iterate through the question for populate the partial result\n  for (const key of Object.keys(questions)) {\n    const partialResult = {\n      questionId: \"\",\n      optionOne: {},\n      optionTwo: {},\n    };\n\n    let percentage =\n      getPercentile(\n        questions[key].optionOne.votes.length,\n        questions[key].optionTwo.votes.length\n      );\n\n    partialResult.questionId = key;\n    partialResult.optionOne.votersNumber =\n      questions[key].optionOne.votes.length;\n    partialResult.optionTwo.votersNumber =\n      questions[key].optionTwo.votes.length;\n    partialResult.optionOne.votersPercent = percentage.a;\n    partialResult.optionTwo.votersPercent = percentage.b;\n\n    //Add the partial result data to the final result array\n    result[partialResult.questionId] = partialResult;\n\n  }\n\n  return result;\n}\n\n/**\n * Persists the value of the user in the local storage, or removes the key\n * if no value is passed\n *\n * @param user\n */\nexport function persistLogin(user) {\n  user\n    ? localStorage.loggedUser = user\n    : localStorage.removeItem(\"loggedUser\");\n}\n\n/**\n * Handle the situation in which the user is trying to access sections of\n * the app that require authentication\n *\n * If the authentication is needed and the user is not logged in, the user\n * gets redirected to the /login and, after successful login, redirected\n * back to the requested resource\n *\n * @param props\n */\nexport function handleNotLoggedUserRedirection(props) {\n  //Redirects the user to the login if is not logged in\n  !props.authedUser &&\n  !localStorage.loggedUser &&\n  props.history.push(\"/login\");\n}","import {_getUsers, _getQuestions, _saveQuestionAnswer} from \"../utils/_DATA\";\nimport {receiveUsers} from \"./users\";\nimport {receiveQuestions} from \"./questions\";\nimport {receiveStats} from \"./stats\";\nimport {getStats} from \"../utils/helpers\";\n\nexport function getInitialUsers() {\n  //Thunk pattern for async request\n  return (dispatch) => {\n    //Retrieve the users from the DB\n    return _getUsers()\n      .then((users) => {\n        //Dispatch the action for update the UI\n        dispatch(receiveUsers(users));\n      })\n  }\n}\n\nexport function getInitialQuestions(history) {\n  return (dispatch) => {\n    //Retrieve the questions from the DB\n    return _getQuestions()\n      .then((questions) => {\n        dispatch(receiveQuestions(questions));\n        dispatch(receiveStats(getStats(questions)));\n\n        //Checks if the question displayed in the /questions/ route is\n        // available in the DB, if not redirects the user to a 404 page\n        if(history.location.pathname.indexOf(\"/questions/\") !== -1){\n          if(!questions.hasOwnProperty(history.location.pathname.slice(11))){\n            history.push(\"/404\");\n          }\n        }\n      })\n  }\n}\n\nexport function saveAnswer(data) {\n  return (dispatch) => {\n\n    //Persist the answer in the DB\n    return _saveQuestionAnswer(data)\n      .then((res) => {\n        dispatch(receiveUsers(res.users));\n        dispatch(receiveQuestions(res.questions));\n        dispatch(receiveStats(getStats(res.questions)));\n      })\n  }\n}","export const SET_AUTHED_USER = 'SET_AUTHED_USER';\n\nexport function setAuthedUser(authedUser) {\n  return {\n    type: SET_AUTHED_USER,\n    authedUser\n  }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router'\nimport {setAuthedUser} from '../actions/authedUser';\nimport PropTypes from 'prop-types'\nimport {persistLogin} from \"../utils/helpers\";\n\nclass UserListElement extends Component {\n\n  //Handle the login process, based on the user chosen\n  handleUserSelection = () => {\n    //Update the state with the selected authedUser\n    this.props.dispatch(setAuthedUser(this.props.userId));\n\n    //Persist the logged user id in the local storage\n    persistLogin(this.props.userId);\n\n    //Redirect the user to the previous page visited\n    this.props.history.goBack();\n  };\n\n  render() {\n    const {currentUserData, userId} = this.props;\n    const data = currentUserData[userId];\n\n    return (\n      <li onClick={this.handleUserSelection}>\n        <span>\n          <img\n            src={data.avatarURL}\n            alt={data.name + \"'s avatar\"}/>\n          <span>{data.name}</span>\n        </span>\n      </li>\n    )\n  }\n}\n\nUserListElement.propTypes = {\n  currentUserData: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({users}) {\n  return {\n    currentUserData: users\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(UserListElement));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport UserListElement from './UserListElement';\nimport PropTypes from 'prop-types';\n\nclass UserList extends Component {\n  render() {\n    return (\n      <div className={\"userList\"}>\n        <h2>Please select an user</h2>\n\n        <ul className={\"userListElements\"}>\n          {this.props.userIds.map(user =>\n            <UserListElement\n              key={user}\n              userId={user}\n            />)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nUserList.propTypes = {\n  userIds: PropTypes.array.isRequired,\n};\n\nfunction mapStateToProps({users}){\n  return {\n    userIds:Object.keys(users)\n      .sort(function(a, b) {\n        //Sort the names alphabetically\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      })\n  }\n}\n\nexport default connect(mapStateToProps)(UserList);","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom'\n\nfunction Welcome() {\n  return (\n    <Fragment>\n      <p>Welcome! For access the App's functionalities please log in:&nbsp;\n        <Link to={'/login'}>Login</Link>\n      </p>\n    </Fragment>\n  )\n}\n\nexport default Welcome;","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {setAuthedUser} from '../actions/authedUser';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport {persistLogin} from \"../utils/helpers\";\n\nclass UserBarInfo extends Component {\n\n  //Handle the logout functionality, updating both the Store and the\n  // localStorage\n  handleLogout = () => {\n    this.props.dispatch(setAuthedUser(null));\n\n    //Remove the user token value\n    persistLogin();\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const {userName, avatarUrl, authedUser} = this.props;\n\n    return (\n      <Fragment>\n        <span className={\"barInfo-element\"}>{userName}</span>\n        {avatarUrl !== \"\" &&\n        <img\n          className={\"avatar\"}\n          src={avatarUrl}\n          alt={userName + \"'s Avatar\"}\n        />}\n\n        {/*Shows the logout link only if a user already logged in, otherwise\n         show the login link*/}\n        {authedUser !== null\n          ? <Fragment>\n            <Link className={\"barInfo-element\"} to={\"/leaderboard\"}>Leaderboard</Link>\n            <Link className={\"barInfo-element\"} to={\"/add\"}>Add Question</Link>\n            <span className={\"logoutLink\"}\n                  onClick={this.handleLogout}>Logout</span>\n          </Fragment>\n          : <Link to={'/login'}>Login</Link>\n        }\n\n      </Fragment>\n    )\n  }\n}\n\nUserBarInfo.propTypes = {\n  userName: PropTypes.string.isRequired,\n  avatarURL: PropTypes.string,\n  authedUser: PropTypes.string,\n};\n\nexport default withRouter(connect()(UserBarInfo));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport {checkIfAlreadyVoted} from \"../utils/helpers\";\nimport {saveAnswer} from \"../actions/shared\";\n\nclass PoolListElement extends Component {\n  componentDidMount() {\n\n    //Performs the /questions/ URL check\n    this.isUserInQuestionsPath();\n\n    //Checks if the current question has already been voted\n    this.setState(() => ({\n      //Assign true if either the 1st or the 2nd question got the authedUser\n      // vote\n      isVoted:\n        checkIfAlreadyVoted(\n          this.props.questions.optionOne, this.props.authedUser\n        ) ||\n        checkIfAlreadyVoted(\n          this.props.questions.optionTwo, this.props.authedUser\n        )\n    }));\n  }\n\n  /**\n   * Handle the voting functionality updating the UI consequently and\n   * persisting the vote on the DB\n   *\n   * @param answer\n   */\n  handleVoting = (answer) => {\n    //Checks if the voting button is enabled\n    if (!this.state.isVotingDisabled) {\n      let authedUser = this.props.authedUser;\n      let qid = this.props.id;\n\n      //Makes the voting button disabled\n      this.setState({\n        isVotingDisabled: true,\n      });\n\n      //Persist the new info on the DB\n      this.props.dispatch(saveAnswer(\n        {\n          authedUser: authedUser,\n          qid: qid,\n          answer: answer,\n        }))\n      //Update the UI\n        .then(() => {\n            this.setState({\n              isVoted: true,\n            });\n          }\n        );\n    }\n  };\n\n  //Checks if the url has the string '/questions/' for define if the UI\n  // should render the question's detail or the question list\n  isUserInQuestionsPath = () => {\n    return this.props.location.pathname.indexOf('/questions/') !== -1;\n  };\n\n  state = {\n    isVoted: null,\n    isVotingDisabled: false\n  };\n\n  render() {\n    const {optionOne, optionTwo} = this.props.questions;\n    const {authorData} = this.props;\n\n    return (\n      <div className={\"poolList-element\"}>\n        <div className={\"poolList-element__wrapper\"}>\n          <div\n            className={\"poolList-element__question\" +\n            (checkIfAlreadyVoted(\n              this.props.questions.optionOne, this.props.authedUser) ?\n              \" poolList-element__question--selected\" : \"\")}\n          >\n            <span>Option 1: {optionOne.text}</span>\n\n            {this.isUserInQuestionsPath() &&\n            this.state.isVoted &&\n            this.props.stats[this.props.id] &&\n            <span>\n              <span className={\"votersNumber\"}>\n                # of voters: {this.props.stats[this.props.id].optionOne.votersNumber}\n              </span>\n              <span>\n              {this.props.stats[this.props.id].optionOne.votersPercent} %\n            </span>\n            </span>\n            }\n\n            {!this.state.isVoted &&\n            this.props.votingSection &&\n            <div className={\n              \"btn poolBtn\" +\n              (this.state.isVotingDisabled ? \" btn--disabled\" : \"\")\n            }>\n              <span onClick={() => this.handleVoting(\"optionOne\")}>Vote</span>\n            </div>\n            }\n          </div>\n\n          <hr/>\n\n          <div className={\"poolList-element__question\" +\n          (checkIfAlreadyVoted(\n            this.props.questions.optionTwo, this.props.authedUser) ?\n            \" poolList-element__question--selected\" : \"\")}>\n            <span>Option 2: {optionTwo.text}</span>\n\n            {this.isUserInQuestionsPath() &&\n            this.state.isVoted &&\n            this.props.stats[this.props.id] &&\n            <span>\n              <span className={\"votersNumber\"}>\n              # of voters: {this.props.stats[this.props.id].optionTwo.votersNumber}\n              </span>\n              <span>\n              {this.props.stats[this.props.id].optionTwo.votersPercent} %\n            </span>\n            </span>\n            }\n\n            {!this.state.isVoted &&\n            this.props.votingSection &&\n            <div className={\n              \"btn poolBtn\" +\n              (this.state.isVotingDisabled ? \" btn--disabled\" : \"\")\n            }>\n              <span onClick={() => this.handleVoting(\"optionTwo\")}>Vote</span>\n            </div>\n            }\n          </div>\n        </div>\n\n        <div className={\"poolList-element__author\"}>\n          <span className={\"poolList-element__author\"}>Created by:&nbsp;\n            {authorData.name}\n        </span>\n          <img className={\"avatar\"} src={authorData.avatarURL}\n               alt={authorData.name + \"'s\" +\n               \" Avatar\"}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nPoolListElement.propTypes = {\n  id: PropTypes.string.isRequired,\n  questions: PropTypes.object.isRequired,\n  authorData: PropTypes.object.isRequired,\n  votingSection: PropTypes.bool,\n};\n\nfunction mapStateToProps({authedUser, stats}) {\n  return {\n    authedUser,\n    stats,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(PoolListElement));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PoolListElement from \"./PoolListElement\";\nimport {filterQuestionsByUser} from \"../utils/helpers\";\n\nclass PoolList extends Component {\n\n  state = {\n    displayAnswered: false,\n  };\n\n  //Handle the toggle functionality between the unanswered and the answered\n  // questions\n  handleToggle = () => {\n    this.setState(() => ({\n      displayAnswered: !this.state.displayAnswered\n    }))\n  };\n\n  render() {\n    const {answeredQuestions, unansweredQuestions} = this.props;\n\n    //Define which questions the UI should render, depending on the current\n    // state\n    const currentQuestions = this.state.displayAnswered\n      ? answeredQuestions\n      : unansweredQuestions;\n\n    return (\n      <div>\n        <div className={\"btn poolBtn\"}>\n          <span\n            onClick={this.handleToggle}\n          >Display\n            {this.state.displayAnswered ? \" unanswered\" : \" answered\"}\n          </span>\n        </div>\n\n        <h2>{\n          this.state.displayAnswered ? \"Answered \" : \"Unanswered \"\n        } questions</h2>\n\n        {currentQuestions.map((question) => {\n          return (\n            <Link\n              key={question.id}\n              to={\"/questions/\" + question.id}\n              className={\"poolList-link\"}\n            >\n              <PoolListElement\n                id={question.id}\n                questions={question}\n                authorData={this.props.users[question.author]}\n              />\n            </Link>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nPoolList.propTypes = {\n  authedUser: PropTypes.string,\n  unansweredQuestions: PropTypes.array.isRequired,\n  answeredQuestions: PropTypes.array.isRequired,\n  users: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({authedUser, questions, users}) {\n  //Retrieve the questions filtered\n  const filteredQuestions = filterQuestionsByUser(questions, authedUser);\n\n  return {\n    authedUser,\n    unansweredQuestions: filteredQuestions.unanswered,\n    answeredQuestions: filteredQuestions.answered,\n    users,\n  }\n}\n\nexport default connect(mapStateToProps)(PoolList);","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport PoolListElement from \"./PoolListElement\";\nimport {handleNotLoggedUserRedirection} from \"../utils/helpers\";\n\nclass QuestionDetails extends Component {\n\n  componentDidMount(){\n    //Redirects the user to the login if is not logged in\n    handleNotLoggedUserRedirection(this.props);\n  };\n\n  //Handle the 'back' button functionality\n  handleBack = () => {\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const questionId = this.props.match.params.questionId;\n    const currentQuestion = this.props.questions[questionId];\n\n    let authorData;\n    //Checks if the currentQuestion is a thing, because this data is\n    // retrieved asynchronously\n    if (currentQuestion)\n      authorData = this.props.users[currentQuestion.author];\n\n    return (\n      <Fragment>\n        <h1>Would you rather</h1>\n\n        <div className=\"btn backBtn\">\n          <span onClick={this.handleBack}>Back</span>\n        </div>\n\n        <h2>Question details (id: {this.props.match.params.questionId})</h2>\n\n        {authorData &&\n        <div>\n          <PoolListElement\n            id={questionId}\n            questions={currentQuestion}\n            authorData={authorData}\n            votingSection={true}\n          />\n        </div>\n        }\n      </Fragment>\n    )\n  }\n}\n\nQuestionDetails.propTypes = {\n  authedUser: PropTypes.string,\n  users: PropTypes.object.isRequired,\n  questions: PropTypes.object.isRequired,\n};\n\nfunction mapStateToPros({authedUser, users, questions}) {\n  return {\n    authedUser,\n    users,\n    questions,\n  }\n}\n\nexport default withRouter(connect(mapStateToPros)(QuestionDetails));","import React, {Component, Fragment} from 'react';\nimport {withRouter} from 'react-router';\n\nclass NotFound extends Component {\n\n  //Handle the \"back to home\" button functionality\n  handleBackToHome = () => {\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <h2>404 - Resource not found</h2>\n        <p>Unfortunately the resource you where looking cannot be found.</p>\n\n        <div className={\"btn\"}>\n          <span onClick={this.handleBackToHome}>Go back to home</span>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default withRouter(NotFound);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport {_saveQuestion} from \"../utils/_DATA\";\nimport serialize from 'form-serialize';\nimport {handleNotLoggedUserRedirection} from \"../utils/helpers\";\nimport {addQuestion} from \"../actions/questions\";\nimport {addUserQuestions} from \"../actions/users\";\n\nclass Add extends Component {\n\n  state = {\n    isSubmitBtnDisabled: false,\n    errorMessage: false\n  };\n\n  componentDidMount() {\n    //Redirects the user to the login if is not logged in\n    handleNotLoggedUserRedirection(this.props);\n  };\n\n  //Functionality for the \"back\" button\n  handleBack = () => {\n    this.props.history.push(\"/\");\n  };\n\n  /**\n   * Handle the form submit functionality\n   *\n   * @param e\n   */\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    //Store the form info and serialise them\n    let form = document.querySelector(\"#addForm\");\n    let serialisedForm = serialize(form, {hash: true});\n\n    if (!this.state.isSubmitBtnDisabled &&\n      Object.keys(serialisedForm).length === 2\n    ) {\n      //Convert the btn state to disabled\n      this.setState({\n        isSubmitBtnDisabled: true,\n      });\n\n      //Create the result object for the DB API\n      let result = {};\n      result.optionOneText = serialisedForm.optionOne;\n      result.optionTwoText = serialisedForm.optionTwo;\n      result.author = localStorage.loggedUser;\n\n      //Persist the question in the DB\n      _saveQuestion(result)\n        .then(res => {\n          //Update the Store and UI\n          this.props.dispatch(addQuestion(res));\n          this.props.dispatch(addUserQuestions({\n            author: this.props.authedUser,\n            newQuestion: res.id,\n          }));\n          //Redirects to the root\n          this.props.history.push(\"/\");\n        });\n    } else {\n      //Display the error message\n      this.setState({\n        errorMessage: true,\n      });\n      //Remove the error message after 4s\n      setTimeout(() => {\n        this.setState({\n          errorMessage: false,\n        })\n      }, 4000)\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Would you Rather</h1>\n\n        <div className=\"btn backBtn\">\n          <span onClick={this.handleBack}>Back</span>\n        </div>\n\n        <form id={\"addForm\"}>\n          <label htmlFor=\"optionOne\">Option 1:</label>\n          <input\n            id={\"optionOne\"}\n            type=\"text\"\n            name={\"optionOne\"}\n            placeholder={\"Please enter the 1st option\"}/>\n\n          <label htmlFor=\"optionTwo\">Option 2:</label>\n          <input\n            id={\"optionTwo\"}\n            type=\"text\"\n            name={\"optionTwo\"}\n            placeholder={\"Please enter the 2nd option\"}/>\n\n          <div\n            className={\"btn\" +\n            (this.state.isSubmitBtnDisabled ? \" btn--disabled\" : \"\")}>\n            <span onClick={this.handleSubmit}>Submit</span>\n          </div>\n        </form>\n\n        <p\n          className={(this.state.errorMessage ? \"\" : \"hidden \") + \"errorMessage\"}>\n          Error! Input fields must be both populated with a sentence!</p>\n      </div>\n    )\n  }\n}\n\nAdd.propTypes = {\n  authedUser: PropTypes.string,\n};\n\nfunction mapStateToProps({authedUser}){\n  return {\n    authedUser,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Add));","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport {handleNotLoggedUserRedirection} from \"../utils/helpers\";\n\nclass Leaderboard extends Component {\n\n  componentDidMount(){\n    handleNotLoggedUserRedirection(this.props);\n  }\n\n  //Handle the \"back\" button functionality\n  handleBack = () => {\n    this.props.history.push(\"/\");\n  };\n\n  /**\n   * Generates a ranked list of users from the users list\n   * It returns an object with all the data needed for populate the UI\n   *\n   * @param usersId\n   * @returns {*|void}\n   */\n  rankedUsers = (usersId) => {\n    return usersId.map(userId => {\n      return (\n        {\n          id: userId,\n          name: this.props.users[userId].name,\n          avatarURL: this.props.users[userId].avatarURL,\n          answers: Object.keys(this.props.users[userId].answers).length,\n          questions: this.props.users[userId].questions.length,\n          total: Object.keys(this.props.users[userId].answers).length +\n            this.props.users[userId].questions.length,\n        }\n      )\n    })\n      //Sort the data from the higher value to the lower\n      .sort((a, b) => {\n        return b.total - a.total\n      })\n  };\n\n  render() {\n    const {users, usersKeys, authedUser} = this.props;\n\n    return (\n      <Fragment>\n        <h1>Leaderboard</h1>\n\n        <div className=\"btn backBtn\">\n          <span onClick={this.handleBack}>Back</span>\n        </div>\n\n        <div className={\"leaderboard-wrapper\"}>\n          <div className={\"leaderboard-userInfo\"}>\n            {users[authedUser] && this.rankedUsers(usersKeys).map(user => {\n              return (\n                <div\n                  key={user.id}\n                  className={\"leaderboard-userInfo-details\"}>\n                  <p>{user.name}</p>\n                  <img\n                    className={\"avatar\"}\n                    src={user.avatarURL}\n                    alt={user.name + \"'s Avatar\"}\n                  />\n                  <p>Answers: {user.answers}</p>\n                  <p>Questions: {user.questions}</p>\n                  <p><b>Total: {user.total}</b></p>\n                </div>\n              )\n            })\n            }\n          </div>\n\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nLeaderboard.propTypes = {\n  users: PropTypes.object.isRequired,\n  authedUser: PropTypes.string,\n  usersKeys: PropTypes.array.isRequired,\n};\n\nfunction mapStateToProps({users, authedUser}) {\n  return {\n    users,\n    authedUser,\n    usersKeys: Object.keys(users),\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Leaderboard));","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter, Switch} from \"react-router\";\nimport {Route} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {getInitialUsers, getInitialQuestions} from './actions/shared';\nimport UserList from './components/UserList';\nimport Welcome from './components/Welcome';\nimport UserBarInfo from \"./components/UserBarInfo\";\nimport PoolList from \"./components/PoolList\";\nimport QuestionDetails from \"./components/QuestionDetails\";\nimport {setAuthedUser} from \"./actions/authedUser\";\nimport NotFound from \"./components/NotFound\";\nimport Add from \"./components/Add\";\nimport Leaderboard from \"./components/Leaderboard\";\n\nclass App extends Component {\n\n  componentDidMount() {\n    //Retrieve the Users from the DB\n    this.props.dispatch(getInitialUsers());\n\n    //Set the Store's authUser accordingly with the localStorage\n    localStorage.loggedUser &&\n    this.props.dispatch(setAuthedUser(localStorage.loggedUser));\n\n    //Retrieve the questions from the DB\n    this.props.dispatch(getInitialQuestions(this.props.history));\n  }\n\n  render() {\n    //Set default values for the UserBarInfo Component\n    const userBarInfo = {};\n    this.props.users[this.props.authedUser]\n      ? userBarInfo.name = this.props.users[this.props.authedUser].name\n      : userBarInfo.name = \"User not logged in\";\n\n    this.props.users[this.props.authedUser]\n      ? userBarInfo.avatarURL = this.props.users[this.props.authedUser].avatarURL\n      : userBarInfo.avatarURL = \"\";\n\n    return (\n      <Fragment>\n        <div className={\"barInfo-wrapper\"}>\n          <header>\n            <UserBarInfo\n              userName={userBarInfo.name}\n              avatarUrl={userBarInfo.avatarURL}\n              authedUser={this.props.authedUser}\n            />\n          </header>\n        </div>\n\n        <div className={\"appWrapper\"}>\n\n          <Switch>\n            <Route exact path={\"/\"} render={() => (\n              <Fragment>\n                <h1>Would you Rather</h1>\n                {!this.props.authedUser && <Welcome/>}\n                {this.props.authedUser && <PoolList/>}\n              </Fragment>\n            )\n            }/>\n\n            <Route exact path={\"/login\"} component={UserList}/>\n\n            <Route exact path={\"/404\"} component={NotFound}/>\n\n            <Route exact path={\"/add\"} component={Add}/>\n\n            <Route exact path={\"/leaderboard\"} component={Leaderboard}/>\n\n            <Route\n              path={\"/questions/:questionId\"}\n              component={QuestionDetails}\n            />\n\n            <Route component={NotFound}/>\n          </Switch>\n\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  users: PropTypes.object.isRequired,\n  authedUser: PropTypes.string\n};\n\nfunction mapStateToProps({users, authedUser}) {\n  return {\n    users,\n    authedUser\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport authedUser from './authedUser';\nimport users from './users';\nimport questions from './questions';\nimport stats from './stats'\n\n//Main reducer\nexport default combineReducers({\n  authedUser,\n  users,\n  questions,\n  stats,\n})","import {SET_AUTHED_USER} from \"../actions/authedUser\";\n\nexport default function authedUser(state=null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.authedUser;\n\n    default:\n      return state\n  }\n}","import {ADD_USER_QUESTIONS, RECEIVE_USERS} from \"../actions/users\";\n\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        ...action.users\n      };\n\n    case ADD_USER_QUESTIONS:\n      //Adds the new question to the user questions array\n      state[action.question.author].questions.push(action.question.newQuestion);\n      return {\n        ...state,\n      };\n\n    default:\n      return state\n  }\n}","import {ADD_QUESTION, RECEIVE_QUESTIONS} from \"../actions/questions\";\n\nexport default function questions(state={}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions,\n      };\n\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.question.id]: action.question,\n      };\n\n    default:\n      return state\n  }\n}","import {RECEIVE_STATS} from \"../actions/stats\";\n\nexport default function stats(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_STATS:\n      return {\n        ...state,\n        ...action.stats\n      };\n\n    default:\n      return state\n  }\n}","/**\n * Please note: the logger middleware has been left commented out by\n * purpose. If you want this functionality uncomment it.\n */\nimport thunk from 'redux-thunk';\n// import logger from './logger';\nimport {applyMiddleware} from 'redux';\n\nexport default applyMiddleware(\n  thunk,\n  // logger,\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './main.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers';\nimport middleware from './middleware';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}